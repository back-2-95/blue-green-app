name: Deploy

on:
  release:
    types: [ published ]
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy.yml'
      - 'Dockerfile'
      - 'index.php'
  workflow_dispatch:

jobs:

  build:

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    uses: requirecloud/gha-workflows/.github/workflows/docker-image-build.yml@main
    with:
      image: ghcr.io/${{ github.repository }}
      platforms: linux/arm64
    secrets: inherit

  deploy:

    needs: [ build ]

    permissions:
      contents: read
      packages: read

    runs-on: ubuntu-latest

    environment:
      name: prod

    steps:

      - uses: requirecloud/gha-workflows/.github/workflows/zero-trust-ssh.yml@main
        with:
          zerotrust: tailscale
          ts_oauth_client_id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          ts_oauth_secret: ${{ secrets.TS_OAUTH_SECRET }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          private_ssh_key: ${{ secrets.PRIVATE_SSH_KEY }}

      - uses: actions/checkout@v5

      - name: Show Blue/Green plan
        run: BUILD=${{ github.run_number }} make debug

      - name: Validate Docker Compose config
        run: BUILD=${{ github.run_number }} make config

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start up container with new image
        run: BUILD=${{ github.run_number }} make deploy

      - name: Post deployment tasks
        run: echo "Post deployment tasks" && sleep 10

  switch:

    needs: [ deploy ]

    permissions:
      contents: read
      packages: read

    runs-on: ubuntu-latest

    environment:
      name: prod

    steps:

      - uses: requirecloud/gha-workflows/.github/workflows/zero-trust-ssh.yml@main
        with:
          zerotrust: tailscale
          ts_oauth_client_id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          ts_oauth_secret: ${{ secrets.TS_OAUTH_SECRET }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          private_ssh_key: ${{ secrets.PRIVATE_SSH_KEY }}

      - uses: actions/checkout@v5

      - name: Check that new service is up and healthy
        run: make test-health

      - name: Switch router
        run: make switch-router

      - name: Clear old images
        run: make clear-old-images LABEL=org.opencontainers.image.source=https://github.com/${{ github.repository }}
