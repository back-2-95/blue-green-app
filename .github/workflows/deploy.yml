name: Deploy

on:
  release:
    types: [ published ]
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy.yml'
      - 'Dockerfile'
  workflow_dispatch:

jobs:

  build:

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    uses: requirecloud/gha-workflows/.github/workflows/docker-image-build.yml@main
    with:
      image: ghcr.io/${{ github.repository }}
      platforms: linux/arm64
    secrets: inherit

  deploy:

    needs: [ build ]

    permissions:
      contents: read
      packages: read

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v5

      - name: Set context
        run: |
          make debug

      - name: Validate Docker Compose config
        run: |
          BUILD_BLUE=${{ github.run_number }} \
          BUILD_GREEN=${{ github.run_number }} \
          env $(grep -v '^#' .env.prod | xargs) \
          docker compose config

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          use-cache: 'true'

      - name: Setup SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE_SSH_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace
          config: |
            Host ineen
              HostName ineen
              StrictHostKeyChecking no
              ControlMaster auto
              ControlPath ~/.ssh/control-%C
              ControlPersist yes

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start up container with new image
        run: |
          BUILD_BLUE=${{ github.run_number }} \
          BUILD_GREEN=${{ github.run_number }} \
          env $(grep -v '^#' .env.prod | xargs) \
          docker compose up --wait --force-recreate

      - name: Clear old images
        run: |
          docker image prune -a --force \
          --filter "label=org.opencontainers.image.source=https://github.com/${{ github.repository }}"
